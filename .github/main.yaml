name: Main workflow (check & build push docker)

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  checks-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'  # Adjust Go version if needed

      - name: Install dependencies
        run: go mod download
        working-directory: ./api

      - name: Run linter
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint
          golangci-lint run ./...
        working-directory: ./api

  checks-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Adjust Node.js version if needed

      - name: Install modules
        run: npm install
        working-directory: ./web

      - name: Run ESLint
        run: npm run lint
        working-directory: ./web

  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - context: ./api
            image: ghcr.io/${{ github.repository }}/api
          - context: ./web
            image: ghcr.io/${{ github.repository }}/web
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}}
            latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
